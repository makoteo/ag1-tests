{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#materialy","title":"Materi\u00e1ly","text":"<ul> <li>AG1 courses</li> <li>FIT Wiki</li> <li>Online FIT</li> </ul>"},{"location":"#contributors","title":"Contributors","text":""},{"location":"#truepeak-et-al","title":"Truepeak et. al","text":""},{"location":"00_Testy/DP_%C3%BAlohy/","title":"DP \u00falohy","text":"<p>Nejdel\u0161\u00ed cesta v matici</p> <p></p> <p>Kuchy\u0148sk\u00e1 prk\u00fdnka</p> <p></p> <p>P\u0159evoz piva</p> <p></p> <p>P\u0159evleky oble\u010den\u00ed</p> <p></p> <p>Kabely</p>"},{"location":"00_Testy/DP_%C3%BAlohy/#implication-dp.1","title":"Nejdel\u0161\u00ed cesta v matici","text":"<ul> <li>Na vstupu je NxN matice Mat, kde ka\u017ed\u00fd prvek m\u00e1 ur\u010denou hodnotu. Prvky \\(Mat[0][0]\\) a \\(Mat[N][N]\\) maj\u00ed hodnotu 0. Zbytek n\u00e1hodn\u00e9 celo\u010d\u00edseln\u00e9 hodoty (z\u00e1porn\u00e9, nulov\u00e9 i kladn\u00e9).</li> <li>Navrhn\u011bte algoritmus, kter\u00fd nalezne posloupnost prvk\u016f za\u010d\u00ednaj\u00edc\u00ed na \\(Mat[0][0]\\) a kon\u010d\u00edc\u00ed na \\(Mat[N][N]\\), kde jejich sou\u010det je nejv\u011bt\u0161\u00ed. Nap\u0159\u00ed\u010d matic\u00ed se d\u00e1 pohybovat pouze sm\u011brem doprava (\\(Mat[i][j+1]\\)) a nebo dol\u016f (\\(Mat[i+1][j]\\)).</li> </ul>"},{"location":"00_Testy/DP_%C3%BAlohy/#implication-dp.2","title":"Kuchy\u0148sk\u00e1 prk\u00fdnka","text":""},{"location":"00_Testy/DP_%C3%BAlohy/#implication-dp.3","title":"P\u0159evoz piva","text":"<p>Pepa p\u0159ev\u00e1\u017e\u00ed pivo ve m\u011bst\u011b. V\u0161echny domy jsou na jedn\u00e9 p\u0159\u00edmce. Ka\u017ed\u00fd d\u016fm m\u00e1 ozna\u010deno kolik si objednal piva a jak daleko je od pivovaru v jednoprvkov\u00e9 sou\u0159adnici. Voz\u00edk v\u00e1\u017e\u00ed ~ 20 piv, p\u0159i pohybu k domu se po\u010d\u00edt\u00e1 celkov\u00e1 \u00fanava podle: celkov\u00e1 v\u00e1ha * u\u0161l\u00e1 vzd\u00e1lenost. Ze startu m\u00e1 v\u017edy ve voz\u00edku v\u0161echny pot\u0159ebn\u00e1 piva (nemus\u00ed se tedy \u0159e\u0161it, \u017ee vezme prvn\u011b p\u00e1r piv a pak se bude vracet pro dal\u0161\u00ed). P\u0159i n\u00e1v\u0161t\u011bv\u011b domu vylo\u017e\u00ed v\u0161echna pot\u0159ebn\u00e1 piva. Je t\u0159eba naj\u00edt posloupnost n\u00e1v\u0161t\u011bv dom\u016f tak, aby celkov\u00e1 \u00fanava byla nejmen\u0161\u00ed. Pepa se z\u00e1rove\u0148 mus\u00ed vr\u00e1tit zp\u00e1tky do pivovaru (10b) </p> N\u00e1pov\u011bda <p>Rozd\u011blit dynamiku na nejbli\u017e\u0161\u00ed d\u016fm nalevo od aktu\u00e1ln\u00ed pozice a na nejbli\u017e\u0161\u00ed d\u016fm napravo od aktu\u00e1ln\u00ed pozice.</p>"},{"location":"00_Testy/DP_%C3%BAlohy/#implication-dp.4","title":"P\u0159evleky oble\u010den\u00ed","text":"<p>OCR Tohle fakt nep\u0159e\u010detlo</p> <p></p>"},{"location":"00_Testy/DP_%C3%BAlohy/#implication-dp.5","title":"Kabely","text":""},{"location":"00_Testy/Finty/","title":"Finty","text":"<p>Fintov\u00fd znalec doc. Dr. rer. nat. Ing. Jan Valdman</p>"},{"location":"00_Testy/Finty/#rozstrel","title":"Rozst\u0159el","text":"<p>\u00daloha na z\u00e1porn\u00fd cyklus</p> <p>Uva\u017eujeme existenci n\u011bjak\u00e9 cesty</p> <ol> <li> <p>Neexistuje z\u00e1porn\u00fd cyklus</p> <ul> <li>existuje nejkrat\u0161\u00ed cesta</li> <li>existuje nejkrat\u0161\u00ed sled (je stejn\u00fd jako nejkrat\u0161\u00ed cesta)</li> </ul> </li> <li> <p>Existuje z\u00e1porn\u00fd cyklus</p> <ul> <li>existuje nejkrat\u0161\u00ed cesta</li> <li>neexistuje nejkrat\u0161\u00ed sled</li> </ul> </li> </ol>"},{"location":"00_Testy/Zkou%C5%A1ka/","title":"Zkou\u0161ka","text":""},{"location":"00_Testy/Zkou%C5%A1ka/#stromy","title":"Stromy","text":"<p>Teorie</p> <ul> <li>Definujte strom. (1b)</li> <li>Formulujte vetu o existenci listu a dok\u00e1\u017ete. (3b)</li> <li>Formulujte vetu o trhani listu a dok\u00e1\u017ete. (3b)</li> <li>Formulujte nejakou ekvivalentni defin\u00edci stromu a dok\u00e1\u017ete, \u017ee t\u00e1to ekvivalence plat\u00ed. (3b)</li> </ul>"},{"location":"00_Testy/Zkou%C5%A1ka/#bfs","title":"BFS","text":"<p>Teorie</p> <ul> <li>Napi\u0161te algoritmus BFS bu\u010f podrobn\u011b slovn\u011b nebo komentovan\u00fdm pseudok\u00f3dem a popi\u0161te co znamenaj\u00ed pou\u017e\u00edvan\u00e1 pomocn\u00e1 pole P a D. (3b)</li> <li>Doka\u017ete spr\u00e1vnost algoritmu BFS, \u017ee BFS uzav\u0159e jen dosa\u017eiteln\u00e9 vrcholy ze startovn\u00edho vrcholu s. (2b)</li> </ul> <p></p> <p>\u00daloha - Jones a Obluda</p> <p></p> <p>\u00daloha - Tajn\u00fd agent</p>"},{"location":"00_Testy/Zkou%C5%A1ka/#implication-bfs.1","title":"\u00daloha - Jones a Obluda","text":"<p>Na vstupu matice, kde jednotliv\u00e9 pole reprezentovaly voln\u00fd prostor nebo st\u011bnu. V bludi\u0161ti je Indiana Jones a obluda. Indiana se pohybuje ka\u017ed\u00e9 kolo jen o jedno pol\u00ed\u010dko (nemus\u00ed se ale pohybovat v\u016fbec). Obluda se pohybuje o dv\u011b pol\u00ed\u010dka, pohybuje se ale deterministicky. V\u017edy se pokus\u00ed zmen\u0161it svoji vzd\u00e1lenost od Indiany (bu\u010f zmen\u0161it sou\u0159adnici x a nebo y, s t\u00edm, \u017ee prioritn\u011b zmen\u0161uje X). V moment\u011b, co se obluda \u017e\u00e1dn\u00fdm krokem nem\u016f\u017ee p\u0159ibl\u00ed\u017eit, neh\u00fdbe se (mezi Indianou a obludou je st\u011bna). \u00dakolem je vymyslet algoritmus, kter\u00fd nalezne nejrakt\u0161\u00ed sled ze Startu do c\u00edle bez setk\u00e1n\u00ed se s obludou (5b)</p> \u0159e\u0161en\u00ed <p>Jeliko\u017e je obluda deterministick\u00e1, m\u016f\u017eeme si vytvo\u0159it graf, kde ka\u017ed\u00fd vrchol bude reprezentovat pozici Jonese a obludy. Hrany budou reprezentovat pohyb Jonese. N\u00e1sledn\u011b m\u016f\u017eeme pou\u017e\u00edt BFS, kde v ka\u017ed\u00e9m kroku zjist\u00edme, zda se obluda m\u016f\u017ee p\u0159ibl\u00ed\u017eit Jonese. Pokud ano, tak dan\u00fd vrchol ignorujeme. Pokud ne, tak se pohybujeme d\u00e1l. Pokud se dostaneme do c\u00edle, tak jsme na\u0161li nejkrat\u0161\u00ed cestu. </p> <p>(AI Written - not reviewed)</p>"},{"location":"00_Testy/Zkou%C5%A1ka/#implication-bfs.2","title":"\u00daloha - Tajn\u00fd agent","text":"<p>M\u00e1me tajnou operaci, tajn\u00fd agent m\u00e1 dopadnout na p\u0159esn\u011b stanoven\u00fd d\u016fm a p\u0159ej\u00edt do jin\u00e9ho domu bu\u010f sk\u00e1k\u00e1n\u00edm po st\u0159ech\u00e1ch nebo chozen\u00edm p\u0159es sklep. Zm\u011bna toho jestli jde po st\u0159e\u0161e nebo p\u0159es sklep m\u016f\u017ee nastat v ka\u017ed\u00e9m dom\u011b ale stoj\u00ed to agenta v\u00edce \u010dasu (a m\u016f\u017ee b\u00fdt odhalen), proto po\u010det zm\u011bn chceme minimalizovat. Uva\u017eujeme, \u017ee z jednoho domu do druh\u00e9ho m\u016f\u017ee j\u00edt pouze jedn\u00edm typem hrany (tedy ne st\u0159echou i sklepem). Hrany jsou tedy ozna\u010deny nap\u0159. pomoc\u00ed roof (st\u0159echa) nebo base (sklep). Najd\u011bte co nejkrat\u0161\u00ed cestu ze za\u010d\u00ednaj\u00edc\u00edho domu s do domu d tak, aby algoritmus po\u010d\u00edtal po\u010det zm\u011bn roof/base, tzn. kolikr\u00e1t agent musel p\u0159ej\u00edt p\u0159es d\u016fm a toto \u010d\u00edslo minimalizoval. Chceme tak\u00e9 aby \u0161lo o nejkrat\u0161\u00ed z mo\u017en\u00fdch takov\u00fdch cest. Slo\u017eitost algoritmu by m\u011bla b\u00fdt O(|V|+|E|). Za O(|V|\u00b2) max 2b.</p> <p>N\u00e1pov\u011bda: m\u016f\u017eete nap\u0159\u00edklad vhodn\u011b modifikovat algoritmus BFS (nebo upravit vhodn\u011b graf). (5b)</p> N\u00e1znak \u0159e\u0161en\u00ed <p>( Mo\u017en\u00e1 spr\u00e1vn\u011b, feel free to correct )</p> <ul> <li>Vytvo\u0159\u00edme graf, kde ka\u017ed\u00fd vrchol bude reprezentovat stav agenta (pozice, zda je na st\u0159e\u0161e nebo v suter\u00e9nu). Hrany budou reprezentovat pohyb agenta mezi domy a p\u0159echodov\u00e9 hrany mezi st\u0159echou a suter\u00e9nem.</li> <li>\u00daprava BFS na dv\u011b fronty, kde jedna zna\u010d\u00ed pohyb v dan\u00e9 hladin\u011b a druh\u00e1 zna\u010d\u00ed p\u0159echod mezi st\u0159echou a suter\u00e9nem.<ul> <li>Pokud prvn\u00ed frontu vy\u010derp\u00e1me, incrementujeme po\u010det p\u0159echod\u016f a p\u0159esypeme druhou frontu do prvn\u00ed.</li> </ul> </li> <li>Ukon\u010d\u00edme pokud jsme v c\u00edlov\u00e9m dom\u011b (bu\u010f v suter\u00e9nu nebo na st\u0159e\u0161e).</li> </ul>"},{"location":"00_Testy/Zkou%C5%A1ka/#topologicke-usporadani","title":"Topologick\u00e9 uspo\u0159\u00e1d\u00e1n\u00ed","text":"<p>Teorie</p> <ul> <li>Definujte topologick\u00e9 uspo\u0159\u00e1d\u00e1n\u00ed vrchol\u016f orientovan\u00e9ho grafu. 1 bod</li> <li>Formulujte a doka\u017ete V\u011btu o existenci zdroje orientovan\u00e9ho grafu. \u2014 3 body</li> <li>Slovn\u011b \u010di komentovan\u00fdm pseudok\u00f3dem popi\u0161te algoritmus TopSort v\u010detn\u011b pou\u017e\u00edvan\u00fdch datov\u00fdch struktur, p\u0159\u00edpadn\u011b nejd\u016fle\u017eit\u011bj\u0161\u00ed \u010d\u00e1sti popi\u0161te pseudok\u00f3dem. 3 body</li> <li>Doka\u017ete jeho spr\u00e1vnost, tedy \u017ee v kone\u010dn\u00e9m \u010dase vyd\u00e1 po\u017eadovan\u00fd v\u00fdsledek. 3 body</li> </ul> <p></p> <p>\u00daloha - Antick\u00e1 civilizace</p>"},{"location":"00_Testy/Zkou%C5%A1ka/#implication-topo.1","title":"\u00daloha - Antick\u00e1 civilizace","text":"<ul> <li>M\u00e1me k dispozici str\u00e1nku ze slovn\u00edku antick\u00e9 civilizace - pou\u017e\u00edvaj\u00ed podmno\u017einu na\u0161\u00ed abecedy {A, B, \u2026, Z}, ale v jin\u00e9m po\u0159ad\u00ed. V\u00edme, \u017ee slova na t\u00e9to str\u00e1nce jsou v lexikografick\u00e9m uspo\u0159\u00e1d\u00e1n\u00ed.</li> <li>Navrhn\u011bte algoritmus, kter\u00fd z posloupnosti slov (s_1, s_2, \u2026, s_k) sestav\u00ed uspo\u0159\u00e1d\u00e1n\u00ed jednotliv\u00fdch pou\u017eit\u00fdch znak\u016f. </li> <li>Algoritmus tak\u00e9 mus\u00ed detekovat p\u0159\u00edpady, kdy je uspo\u0159\u00e1d\u00e1n\u00ed z dostupn\u00fdch slov nejednozna\u010dn\u00e9, nebo kdy slova nedodr\u017euj\u00ed lexikografick\u00e9 uspo\u0159\u00e1d\u00e1n\u00ed. </li> <li>Doka\u017ete korektnost tohoto algoritmu, \u010dasovou a pam\u011b\u0165ovou slo\u017eitost vzta\u017eenou k hodnot\u00e1m k (po\u010det slov) a n (suma d\u00e9lek slov). (5b)</li> </ul>"},{"location":"00_Testy/Zkou%C5%A1ka/#haldy","title":"Haldy","text":"<p>Bin\u00e1rn\u00ed halda</p> <p></p> <p>Binomi\u00e1ln\u00ed halda</p>"},{"location":"00_Testy/Zkou%C5%A1ka/#theorem-bin_heap","title":"Bin\u00e1rn\u00ed halda","text":"<ul> <li>Definujte bin\u00e1rn\u00ed haldu (1 bod)</li> <li>Popi\u0161te operace HeapInsert a HeapExtractmin a doka\u017ete jejich \u010dasovou slo\u017eitost (5 bod\u016f)</li> <li>Popi\u0161te HeapBuild (2 body)</li> <li>Doka\u017ete \u010dasovou slo\u017eitost HeapBuild (3 body)</li> </ul>"},{"location":"00_Testy/Zkou%C5%A1ka/#theorem-binomial_heap","title":"Binomi\u00e1ln\u00ed halda","text":"<ul> <li>Definujte binomi\u00e1ln\u00ed strom \u0159\u00e1du k. (1b)</li> <li>Uka\u017ete, kolik m\u00e1 binomi\u00e1ln\u00ed strom \u0159\u00e1du k vrchol\u016f, jak\u00e1 je jeho hloubka a jak\u00fd je stupe\u0148 ko\u0159ene. (3b)</li> <li>Popi\u0161te operaci BHMerge(), doka\u017ete jej\u00ed korektnost a \u010dasovou slo\u017eitost. (4b)</li> <li>Popi\u0161te operaci BHExtractMin(), doka\u017ete jej\u00ed \u010dasovou slo\u017eitost (2b)</li> </ul>"},{"location":"00_Testy/Zkou%C5%A1ka/#rozdel-a-panuj","title":"Rozd\u011bl a panuj","text":""},{"location":"00_Testy/Zkou%C5%A1ka/#mergesort","title":"MergeSort","text":"<p>MergeSort</p> <ul> <li>Podrobn\u011b slovn\u011b i pseudok\u00f3dem popi\u0161te algoritmus MergeSort. </li> <li>Zd\u016fvodn\u011bte jeho spr\u00e1vnost a odvo\u010fdte jeho \u010dasovou a pam\u011b\u0165ovou slo\u017eitost.</li> </ul> <p></p> <p>\u00daloha - Vz\u00e1cn\u00e9 prvky</p>"},{"location":"00_Testy/Zkou%C5%A1ka/#implication-merge.1","title":"\u00daloha - Vz\u00e1cn\u00e9 prvky","text":"<ul> <li>Dostali jsme n\u00e1dobu plnou kuli\u010dek \u2014 ozna\u010dme jejich po\u010det M. V\u0161echny kuli\u010dky jsou podle tvaru, v\u00e1hy, chuti, v\u016fn\u011b i dal\u0161\u00edch, lidsk\u00fdmi smysly testovateln\u00fdch vlastnost\u00ed nerozli\u0161iteln\u00e9 jedna od druh\u00e9. Kuli\u010dky maj\u00ed ve sv\u00e9m j\u00e1dru uzav\u0159en\u00fd jeden atom vz\u00e1cn\u00e9ho prvku. M\u00e1me k dispozici za\u0159\u00edzen\u00ed, kter\u00e9, pokud na vstup dostane dv\u011b kuli\u010dky, sv\u00edt\u00ed \u010derven\u011b (v p\u0159\u00edpad\u011b, \u017ee jsou v j\u00e1drech testovan\u00fdch kuli\u010dek r\u016fzn\u00e9 atomy vz\u00e1cn\u00fdch prvk\u016f) a nebo zelen\u011b (jsou-li v j\u00e1drech testovan\u00fdch kuli\u010dek shodn\u00e9 atomy vz\u00e1cn\u00fdch prvk\u016f). </li> <li>Va\u0161\u00edm \u00fakolem je navrhnout algoritmus, kter\u00fd zjist\u00ed, zda existuje vz\u00e1cn\u00fd prvek, kter\u00fd je obsa\u017een ve striktn\u011b v\u00edce ne\u017e N/2 kuli\u010dk\u00e1ch. V\u00e1\u0161 algoritmus mus\u00ed pracovat v \u010dase o(N?). Algoritmus podrobn\u011b slovn\u011b popi\u0161te, p\u0159\u00edpadn\u011b nejd\u016fle\u017eit\u011bj\u0161\u00ed \u010d\u00e1sti zapi\u0161te v pseudokddu. Zd\u016fvodn\u011bte spr\u00e1vnost va\u0161eho algoritmu. Odvo\u010fdte \u010dasovou a pam\u011b\u0165ovou slo\u017eitost. va\u0161eho \u0159e\u0161en\u00ed. e N\u00e1pov\u011bda: Vhodn\u011b modifikujte algoritmus MergeSort.</li> </ul> N\u00e1znak \u0159e\u0161en\u00ed <ul> <li>Upraven\u00ed MergeSortu tak, aby vracel jen bu\u010f kandid\u00e1ta na vz\u00e1cn\u00fd prvek, nebo Fail indik\u00e1tor. Pokud spojuji:<ol> <li>Prvek a prvek -&gt; Pokud jsou stejn\u00e9, tak vrac\u00edm prvek, pokud ne, tak Fail</li> <li>Prvek a Fail -&gt; Pot\u0159eba spo\u010d\u00edtat po\u010det prvk\u016f, kter\u00e9 jsou stejn\u00e9 jako prvek v pat\u0159i\u010dn\u00e9 \u010d\u00e1sti pole</li> <li>Fail a Fail -&gt; Fail</li> </ol> </li> </ul>"},{"location":"00_Testy/Zkou%C5%A1ka/#quickselect","title":"QuickSelect","text":"<p>Teorie</p> <ul> <li>Napi\u0161te pseudok\u00f3d algoritmu QuickSelect a popi\u0161te ho.</li> <li>Doka\u017ete slo\u017eitost algoritmu v nejhor\u0161\u00edm p\u0159\u00edpad\u011b.</li> <li>Doka\u017ete slo\u017eitost algoritmu v p\u0159\u00edpad\u011b, \u017ee jako pivota vol\u00edme poka\u017ed\u00e9 skoromedi\u00e1n.</li> <li>Uka\u017ete a d\u016fkladn\u011b doka\u017ete slo\u017eitost algoritmu ve st\u0159edn\u00ed hodnot\u011b s n\u00e1hodnou volbou pivota.</li> </ul>"},{"location":"00_Testy/Zkou%C5%A1ka/#karatsubovo-nasobeni","title":"Karatsubovo n\u00e1soben\u00ed","text":"<p>Teorie</p> <ul> <li>Popi\u0161te Karatsubovo n\u00e1soben\u00ed</li> </ul>"},{"location":"00_Testy/Zkou%C5%A1ka/#minimalni-kostry","title":"Minim\u00e1ln\u00ed kostry","text":"<p>Teorie</p> <ul> <li>Definujte kostru, probl\u00e9m hled\u00e1n\u00ed minim\u00e1ln\u00ed kostry a Kruskal\u016fv algoritmus (nen\u00ed pot\u0159eba popisovat vylep\u0161ovac\u00ed struktury jen hlavn\u00ed my\u0161lenku) ( 2 body)</li> <li>Popi\u0161te lemma o \u0159ezech a doka\u017ete ho. (3 body)</li> <li>Definice Element\u00e1rn\u00edho \u0159ezu</li> <li>Jarn\u00edk\u016fv algoritmus</li> <li>Definujte strukturu Union-Find s ke\u0159\u00edkovou implementac\u00ed (2b)</li> <li>Doka\u017ete, \u017ee \u010dasov\u00e9 slo\u017eitosti Union a Find jsou O(log n) (3b)</li> </ul> <p></p> <p>\u00daloha - M\u011bsta a ar\u00e9ny (5b)</p> <p></p> <p>\u00daloha - UF - Add a Increase</p>"},{"location":"00_Testy/Zkou%C5%A1ka/#implication-mst.1","title":"\u00daloha - M\u011bsta a ar\u00e9ny","text":"<ul> <li>\u00dakol na \u00fapravu Kruskala - M\u00e1me dan\u00e9 ceny silnic mezi r\u016fzn\u00fdmi m\u011bsty a ceny ar\u00e9n. M\u016f\u017eeme v libovoln\u00e9m m\u011bst\u011b postavit ar\u00e9nu pop\u0159\u00edpad\u011b spojit dv\u011b m\u011bsta cestou. Jak nejlevn\u011bji za\u0159\u00eddit, aby se z ka\u017ed\u00e9ho m\u011bsta lid\u00e9 dostali do ar\u00e9ny? M\u016f\u017eou nastat extr\u00e9mn\u00ed p\u0159\u00edpady:<ul> <li>V ka\u017ed\u00e9m m\u011bst\u011b zvl\u00e1\u0161\u0165 postav\u00edme ar\u00e9nu</li> <li>Postav\u00edme ar\u00e9nu v jednom m\u011bst\u011b a spoj\u00edme toto m\u011bsto se v\u0161emi ostatn\u00edmi cestami.</li> </ul> </li> </ul> \u0158e\u0161en\u00ed <ul> <li>Sestroj\u00edme graf kde vrcholy jsou m\u011bsta a jedna \"super ar\u00e9na\"</li> <li>Ohodnocen\u00e9 hrany mezi m\u011bsty zn\u00e1zor\u0148uj\u00ed cenu cesty mezi nimi, zat\u00edmco ohodnocen\u00e9 hrany mezi ka\u017ed\u00fdm m\u011bstem a super ar\u00e9nou zn\u00e1zor\u0148uj\u00ed cenu vystaven\u00ed ar\u00e9ny v dan\u00e9m m\u011bst\u011b</li> <li>Po projet\u00ed tohoto grafu kruskalem zbydou ty hrany mezi m\u011bsty kde se v\u00edce vyplat\u00ed postavit cesta a tam kde zbyde hrana mezi m\u011bstem a super ar\u00e9nou se vyplat\u00ed postavit ar\u00e9nu</li> <li>Korektnost tohoto faktu nech\u00e1v\u00e1me bez d\u016fkazu</li> </ul>"},{"location":"00_Testy/Zkou%C5%A1ka/#implication-uf.1","title":"\u00daloha - UF - Add a Increase","text":"<p>M\u011bjme zadan\u00e9 vrcholy, kter\u00e9 maj\u00ed ka\u017ed\u00fd p\u0159i\u0159azenou hodnotu (cenu) a kter\u00e9 nejsou ze za\u010d\u00e1tku propojeny. Navrhn\u011bte takovou strukturu, kter\u00e1 bude podporovat operace: - Add(v,w) - propoj\u00ed vrchol v a w hranou (pokud je\u0161t\u011b nejsou). - Increase(v,x) - zv\u00fd\u0161\u00ed vrcholu v cenu o konstantu x.</p> <p>Po ka\u017ed\u00e9m proveden\u00ed operace Add nebo Increase vra\u0165te v\u0161echny hrany dan\u00e9 komponenty. Tyto dv\u011b operace mus\u00ed fungovat v logaritmick\u00e9m \u010dase, z\u00e1rove\u0148 doka\u017ete \u017ee opravdu v log n \u010dase pracuj\u00ed. Byl tam tip, \u017ee m\u00e1me vhodn\u011b upravit strukturu union find. (5b) </p>"},{"location":"00_Testy/Zkou%C5%A1ka/#quick-sort-problem-razeni","title":"Quick Sort (+ Probl\u00e9m \u0159azen\u00ed)","text":"<p>Teorie</p> <ul> <li>Definujte porovn\u00e1vac\u00ed model \u0159azen\u00ed. 1 bod</li> <li>Formulujte a doka\u017ete V\u011btu o doln\u00edm odhadu slo\u017eitosti \u0159azen\u00ed. 4 body</li> <li>Definujte probl\u00e9m \u0159azen\u00ed cel\u00fdch \u010d\u00edsel. </li> <li>Formulujte a doka\u017ete v\u011btu o slo\u017eitosti vyhled\u00e1v\u00e1n\u00ed v se\u0159azen\u00e9 posloupnosti. </li> <li>Formulujte v\u011btu o slo\u017eitosti \u0159azen\u00ed.</li> <li>Komentovan\u00fdm pseudok\u00f3dem popi\u0161te algoritmus CountingSort.</li> <li>Popi\u0161te, kterou \u010d\u00e1st algoritmu CountingSort nelze v porovn\u00e1vac\u00edm modelu RAM prov\u00e9st a pro\u010d.</li> </ul> <p></p> <p>\u00daloha vyvra\u0165 insert a medi\u00e1n v O(1)</p> <p>Jist\u00fd Ondra S. tvrd\u00ed, \u017ee pro \u00fa\u010dely druh\u00e9 progtestov\u00e9 \u00falohy z BI-AG1 vymyslel n\u00e1sleduj\u00edc\u00ed datovou strukturu na ukl\u00e1d\u00e1n\u00ed libovoln\u00fdch prvk\u016f, kter\u00e9 um\u00edme mezi sebou pouze porovn\u00e1vat. Tato struktura podporuje</p> <ul> <li>operace Insert (vlo\u017e\u00ed prvek do struktury) a.</li> <li>zvl\u00e1\u0161tn\u00ed funkci ExtractMedian (vr\u00e1t\u00ed a ze struktury vyma\u017ee takov\u00fd prvek, kter\u00fd je medi\u00e1nem aktu\u00e1ln\u011b ulo\u017een\u00fdch dat),</li> </ul> <p>oboj\u00ed pr\u00fd v \u010dase O(1) worst-case.</p> <p>Doka\u017ete, \u017ee se Ondra m\u00fdl\u00ed, proto\u017ee \u017e\u00e1dn\u00e1 takov\u00e1 datov\u00e1 struktura nem\u016f\u017ee existovat! Dejte si z\u00e1le\u017eet, a\u0165 je v\u00e1\u0161 d\u016fkaz podrobn\u00fd a m\u00e1 v\u0161echny n\u00e1le\u017eitosti. 5 bod\u016f N\u00e1pov\u011bda: Aplikujte v\u011btu o doln\u00edm odhadu slo\u017eitosti \u0159azen\u00ed.</p>"},{"location":"00_Testy/Zkou%C5%A1ka/#orientovane-grafy","title":"Orientovan\u00e9 grafy","text":"<p>Teorie</p> <ul> <li>Definice sledu a velikosti sledu. (1b)</li> <li>Definice troj\u00faheln\u00edkov\u00e9 nerovnosti a jej\u00ed d\u016fkaz. (2b)</li> <li>Napi\u0161te pseudok\u00f3d algoritmu Relaxace a popi\u0161te ho. (4b)</li> <li>Dok\u00e1zat vlastnost (V) Vzd\u00e1lenosti algoritmu Relaxace (3b)</li> </ul>"},{"location":"00_Testy/Z%C3%A1po%C4%8Det/","title":"Z\u00e1po\u010det","text":"<p>Graf G s pr\u016fm\u011brn\u00fdm stupn\u011bm \\(\\alpha\\)</p> <p>Michal dvo\u0159\u00e1k, cv1</p> <p>Cvi\u010den\u00ed 1.5</p> <p>Zad\u00e1n\u00ed: Ur\u010dete po\u010det v\u0161ech indukovan\u00fdch podgraf\u016f grafu \\(K_{n}\\)</p> <p>\u0158e\u0161en\u00ed: </p> <ul> <li>Sou\u010det v\u0161ech \\(K_{l}\\) kde \\(l \\in \\{1,...,n\\}\\) </li> </ul> \\[ \\sum_{i=1}^{n}\\binom{n}{i} = 2^{n} -1 \\] <p>Cvi\u010den\u00ed 1.10</p> <p>Zad\u00e1n\u00ed: Graf, kter\u00fd obsahuje kru\u017enici jako podgraf, obsahuje kru\u017enici jako indukovan\u00fd podgraf</p> <p>\u0158e\u0161en\u00ed:</p> <ul> <li>Pokud je i indukovan\u00fd podgraf kru\u017enice, tak finished</li> <li>Jinak rozd\u011blit podle t\u011btivy a vz\u00edt men\u0161\u00ed \u010d\u00e1st \\(\\rightarrow\\) rekurze</li> <li>1.10.2 neplat\u00ed \\(\\rightarrow\\) proti p\u0159\u00edklad nap\u0159. \\(K_{n}\\)</li> <li>1.10.3 pla\u00ed \\(\\rightarrow\\) lich\u00e1 se podle t\u011btivy rozd\u011bl\u00ed v\u017edy na sudou a lichou \u010d\u00e1st \\(\\rightarrow\\) rekurze do lich\u00e9</li> </ul>"},{"location":"00_Testy/Z%C3%A1po%C4%8Det/#graf-g-s-prumernym-stupnem","title":"Graf G s pr\u016fm\u011brn\u00fdm stupn\u011bm","text":"<p>M\u011bjme graf \\(G\\), kde  \\(\\alpha = \\dfrac{\\displaystyle\\sum_{v \\in V(G)} deg_{G}(v)}{|V(G)|}\\)</p> <p>pot\u00e9 existuje indukovan\u00fd podgraf \\(H\\) takov\u00fd \u017ee \\((\\forall v \\in V(G))(deg_H(v) \\ge \\frac{\\alpha}2)\\)</p> <p></p> <ul> <li>V\u00fdsledn\u00fd graf \\(H\\) vytvo\u0159\u00edme postupnou \"destrukc\u00ed\" grafu \\(G\\)</li> <li>Za\u010denem tedy s \\(H = G\\)</li> <li>Postupn\u011b budeme z grafu \\(H\\) odeb\u00edrat ka\u017ed\u00fd vrchol \\(v \\in V(H)\\) takov\u00fd \u017ee \\(deg_{H}(v) \\lt \\dfrac{\\alpha}{2}\\)</li> <li>Takto tedy odebereme maxim\u00e1ln\u011b \\(n\\) vrchol\u016f, kde \\(n = |V(H)|\\)</li> <li>Pokud ka\u017ed\u00fd vrchol m\u011bl stupe\u0148 \\(\\lt \\frac{\\alpha}{2}\\), m\u011bly tedy dohromady maxim\u00e1ln\u011b \\(n \\cdot k\\) stup\u0148\u016f, kde \\(k \\lt \\frac{\\alpha}{2}\\) </li> <li>Pro p\u016fvodn\u00ed graf \\(H\\) platilo \\(\\displaystyle\\sum_{v \\in V(H)} deg_{H}(v) = n \\cdot \\alpha\\)</li> <li>Pot\u00e9 co ode\u010dteme stupn\u011b n\u00e1mi odebran\u00fdch vrchol\u016f \\(\\cdot 2\\) (v\u010detn\u011b sousedn\u00edch vrchol\u016f, kter\u00fdm jsme stupe\u0148 odebr\u00e1n\u00edm tak\u00e9 sn\u00ed\u017eili)</li> <li>Nutn\u011b plat\u00ed:</li> </ul> \\[ n\\alpha = 2n \\frac{\\alpha}2  \\gt 2nk \\] \\[ \\displaystyle\\sum_{v \\in V(H)} deg_{H}(v) - 2nk = n\\alpha - 2nk \\gt 0 \\] <ul> <li>Tedy m\u00e1me nepr\u00e1zdn\u00fd graf \\(H\\), kter\u00fd je indukovan\u00fd (plyne z konstrukce), nepr\u00e1zdn\u00fd a v\u0161echny jeho vrcholy maj\u00ed stupe\u0148 \\(\\ge \\frac{\\alpha}{2}\\)</li> </ul>"}]}